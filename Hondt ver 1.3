from ti_system import *
class hondt:
  def mode():
    modelist = ["1:hondt","2:lague","3:mlague","4:custom"]
    print("Select mode:")
    print(modelist)
    global custom
    global mode
    while True:
      global x
      x = get_key()
      if click("esc") == True or click("p") == True:
        print("The mode wasn't selected")
        break
      elif click("1") == True:
        mode = "hondt"
        break
      elif click("2") == True:
        mode = "lague"
        break
      elif click("3") == True:
        mode = "mlague"
        break
      elif click("4") == True:
        i = 0
        while True:
          j = i+1
          print("Quocient",j,"is")
          buffer = input()
          if buffer == "end":
            break
          if i == 0:
            custom = []
          custom.append(int(buffer))
          i = i + 1
        break
  def setup():
    global candidates
    candidates = []
    global ncandidates
    ncandidates = input("Number of candidates is:")
    ncandidates = int(ncandidates)
    global nmandates
    nmandates = input("Number of mandates is:")
    nmandates = int(nmandates)
    global value
    for i in range(ncandidates):
      n = i+1
      print("The candidate",n,"is:")
      candidates.append(input())
    value = []
    for  i in range(ncandidates):
      n = i+1
      print("The candidate",candidates[i],"'s value is:")
      value.append(int(input()))
  def next():
    global truevalue
    global value
    global custom
    global win
    global winner
    if mode == "hondt":
      j = win[winner] + 1
      truevalue[winner] = value[winner] /  j
    if mode == "lague" or mode == "mlague":
      j = win[winner] * 2 + 1
      truevalue[winner] = value[winner] /  j
    if mode == "custom":
      print(len(custom), win[winner])
      if len(custom) <= win[winner]:
        print("Not enough quocients, select next")
        custom.append(int(input()))
      truevalue[winner] = value[winner] /  custom[win[winner]]
  def run():
    global truevalue
    truevalue = []
    global win
    win = []
    global mode
    global ncandidates
    global winner
    if mode == "hondt" or mode == "lague":
      for i in range(ncandidates):
        truevalue.append(float(value[i]))
        win.append(0)
    elif mode == "mlague":
      for i in range(ncandidates):
        buffer = value[i] / 1.4
        truevalue.append(float(buffer))
        win.append(0)
    elif mode == "custom":
      for i in range(ncandidates):
        truevalue.append(value[i] / custom[0])
        win.append(0)
    k = ncandidates-1
    for i in range(nmandates):
      winner = 0
      for i in range(k):
        l = i+1
        if truevalue[winner] < truevalue[l]:
          winner = l
        elif truevalue[winner] == truevalue[l] and win[winner] > win[l] :
          winner = l
      win[winner] = win[winner] + 1
      hondt.next()
    for i in range(len(win)):
      print(candidates[i],":", win[i])
  def test():
    global ncandidates
    ncandidates = 4
    global nmandates
    nmandates = 20
    global candidates
    candidates = ["John","Brad","Kay","Egla"]
    global value
    value = [5000,2500,2000,1000]
    global mode
    mode = "mlague"

def click(key):
  global x
  if x == key:
    while x == key:
      wait(0.1)
      x = get_key()
    return(True)
  else:
    return(False)

def lock():
  options = ["1:Mode","2:Setup","3:Run"]
  print("Select an option:")
  global x
  for i in range(len(options)):
    print (options[i])
  while True:
    x = get_key()
    if click("esc") == True:
      break
    elif click("p") == True:
      break
    elif click("1") == True:
      hondt.mode()
      print(options)
    elif click("2") == True:
      hondt.setup()
      print(options)
    elif click("3") == True:
      hondt.run()
      print(options)

lock()
